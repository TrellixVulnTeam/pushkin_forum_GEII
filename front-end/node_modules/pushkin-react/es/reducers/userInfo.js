var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

import { SUBMIT_USER_INFO_BEGIN, SUBMIT_USER_INFO_SUCCESS, SUBMIT_COMMENTS_BEGIN, SUBMIT_COMMENTS_SUCCESS, USER_ID } from '../actions/userinfo';

import { SET_RESULTS } from '../actions/questionque';

export default function userInfo() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var action = arguments[1];

  switch (action.type) {
    case SUBMIT_USER_INFO_SUCCESS:
      {
        return _extends({}, state, {
          gender: action.data.gender,
          age: action.data.age,
          takenBefore: action.data.takenBefore,
          languageDisorder: action.data.languageDisorder,
          education: action.data.education,
          isFetching: false
        });
      }
    case SUBMIT_USER_INFO_BEGIN:
      {
        return _extends({}, state, {
          isFetching: true
        });
      }
    case 'USER_ID':
      {
        return _extends({}, state, {
          id: action.id,
          isFetching: false
        });
      }
    case SUBMIT_COMMENTS_BEGIN:
      {
        return _extends({}, state, {
          isFetching: true
        });
      }
    case SUBMIT_COMMENTS_SUCCESS:
      {
        return _extends({}, state, {
          isFetching: false,
          nativeLanguages: action.data.nativeLanguages,
          primaryLanguages: action.data.primaryLanguages
        });
      }
    case SET_RESULTS:
      {
        return _extends({}, state, {
          results: action.results
        });
      }
    default:
      return state;
  }
}