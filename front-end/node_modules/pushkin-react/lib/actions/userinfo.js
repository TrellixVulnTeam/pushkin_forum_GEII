'use strict';

exports.__esModule = true;
exports.USER_ID = exports.SUBMIT_COMMENTS_SUCCESS = exports.SUBMIT_COMMENTS_BEGIN = exports.SUBMIT_USER_INFO_SUCCESS = exports.SUBMIT_USER_INFO_BEGIN = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.submitUserInfo = submitUserInfo;
exports.submitComments = submitComments;

var _axiosConfigInitial = require('./axiosConfigInitial');

var _axiosConfigInitial2 = _interopRequireDefault(_axiosConfigInitial);

var _reactRouter = require('react-router');

var _error = require('./error');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var SUBMIT_USER_INFO_BEGIN = exports.SUBMIT_USER_INFO_BEGIN = 'SUBMIT_USER_INFO_BEGIN';
var SUBMIT_USER_INFO_SUCCESS = exports.SUBMIT_USER_INFO_SUCCESS = 'SUBMIT_USER_INFO_SUCCESS';
var SUBMIT_COMMENTS_BEGIN = exports.SUBMIT_COMMENTS_BEGIN = 'SUBMIT_COMMENTS_BEGIN';
var SUBMIT_COMMENTS_SUCCESS = exports.SUBMIT_COMMENTS_SUCCESS = 'SUBMIT_COMMENTS_SUCCESS';
var USER_ID = exports.USER_ID = 'USER_ID';

function sendUserId(id) {
  return {
    type: USER_ID,
    id: id
  };
}
function submitUserInfoBegin() {
  return {
    type: SUBMIT_USER_INFO_BEGIN
  };
}
function submitUserInfoSuccess(data) {
  return {
    type: SUBMIT_USER_INFO_SUCCESS,
    data: data
  };
}
function submitUserInfo(info) {
  return function (dispatch, getState) {
    var state = getState();
    var userId = state.userInfo.id;
    var payload = _extends({}, info, { id: userId });
    dispatch(submitUserInfoBegin());
    _axiosConfigInitial2.default.put('users/' + userId, payload, {
      headers: { 'Content-Type': 'application/json' }
    }).then(function (resp) {
      return resp.data;
    }).then(function (data) {
      return dispatch(submitUserInfoSuccess(data));
    });
  };
}

function submitCommentsBegin() {
  return { type: SUBMIT_COMMENTS_BEGIN };
}

function submitCommentsSuccess(data) {
  return { type: SUBMIT_COMMENTS_SUCCESS, data: data };
}
function submitComments(comments) {
  return function (dispatch, getState) {
    var state = getState().pushkin;
    if (state.userInfo.id) {
      var userId = state.userInfo.id;
      var payload = void 0;
      if (comments.nativeLanguages) {
        payload = _extends({
          userId: userId
        }, comments);
      }

      dispatch(submitCommentsBegin());
      _axiosConfigInitial2.default.post('/comments', payload, {
        headers: { 'Content-Type': 'application/json' }
      }).then(function (response) {
        return response.data;
      }).then(function (data) {
        var nativeLanguages = new Set();
        var primaryLanguages = new Set();
        for (var i = 0; i < data.userLanguages.length; i++) {
          var lang = data.userLanguages[i];
          if (lang.primary) {
            primaryLanguages.add(lang.language.name);
          }
          if (lang.native) {
            nativeLanguages.add(lang.language.name);
          }
        }
        var obj = {
          nativeLanguages: [].concat(nativeLanguages),
          primaryLanguages: [].concat(primaryLanguages)
        };
        return dispatch(submitCommentsSuccess(obj));
      }).then(function () {
        _reactRouter.browserHistory.push('/results/user/' + userId);
      });
    } else {
      throw new Error('there is no user id to attach these comments and demographic data too');
    }
  };
}